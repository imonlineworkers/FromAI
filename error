public async Task<T?> GetAsync<T>(string endpoint, CancellationToken cancellationToken)
{
    SetAuthorizationHeader();
    var response = await _httpClient.GetAsync(endpoint, cancellationToken);
    if (!response.IsSuccessStatusCode) return default;

    var json = await response.Content.ReadAsStringAsync(cancellationToken);

    return JsonConvert.DeserializeObject<T>(json);
}


public async Task<Result<string?>> Handle(CreateUserCommand request, CancellationToken cancellationToken)
{
    var user = _mapper.Map<User>(request);

    await _baseRepository.AddAsync(user, cancellationToken);
    return Result<string?>.Ok(user.UserName, "User ID Successfully Registered");
}
