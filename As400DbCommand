using System;
using System.Data;
using java.sql;

public class As400DapperCommand : IDbCommand
{
    private readonly Connection _connection;
    private PreparedStatement _command;
    private string _commandText;

    public As400DapperCommand(Connection connection)
    {
        _connection = connection ?? throw new ArgumentNullException(nameof(connection));
    }

    public string CommandText
    {
        get => _commandText;
        set
        {
            _commandText = value;
            _command?.close(); // Tutup statement lama kalau ada perubahan query
            _command = _connection.prepareStatement(_commandText);
        }
    }

    public IDataReader ExecuteReader()
    {
        if (string.IsNullOrEmpty(CommandText))
            throw new InvalidOperationException("Query (CommandText) tidak boleh kosong!");

        if (_command == null)
            _command = _connection.prepareStatement(CommandText);

        return new As400DapperReader(_command.executeQuery());
    }

    public int ExecuteNonQuery()
    {
        if (string.IsNullOrEmpty(CommandText))
            throw new InvalidOperationException("Query (CommandText) tidak boleh kosong!");

        if (_command == null)
            _command = _connection.prepareStatement(CommandText);

        return _command.executeUpdate();
    }

    public void Dispose() => _command?.close();

    public CommandType CommandType { get; set; } = CommandType.Text;
    public IDbConnection Connection { get => throw new NotImplementedException(); set => throw new NotImplementedException(); }
    public IDataParameterCollection Parameters => throw new NotImplementedException();
    public int CommandTimeout { get; set; }
    public IDbTransaction Transaction { get; set; }
    public UpdateRowSource UpdatedRowSource { get; set; }

    public void Cancel() => throw new NotImplementedException();
    public IDbDataParameter CreateParameter() => throw new NotImplementedException();
    public void Prepare() => throw new NotImplementedException();
}
