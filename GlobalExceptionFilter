// WebAPI/Filters/GlobalExceptionFilter.cs
public class GlobalExceptionFilter : ExceptionFilterAttribute
{
    private readonly IExceptionLogger _exceptionLogger;

    public GlobalExceptionFilter(IExceptionLogger exceptionLogger)
    {
        _exceptionLogger = exceptionLogger;
    }

    public override void OnException(HttpActionExecutedContext context)
    {
        var exception = context.Exception;

        // Log exception
        _exceptionLogger.Log(exception);

        // Tangani ApiException secara spesifik
        if (exception is ApiException apiException)
        {
            context.Response = context.Request.CreateResponse(
                (HttpStatusCode)apiException.StatusCode, 
                new { message = apiException.Message });
        }
        else
        {
            // Tangani exception umum
            context.Response = context.Request.CreateResponse(
                HttpStatusCode.InternalServerError, 
                new { message = "An unexpected error occurred" });
        }
    }
}
